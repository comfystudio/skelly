AddDefaultCharset utf-8

# Enable gzip compression
# ----------------------------------------------------------------------
<IfModule mod_deflate.c>

    # Force compression for mangled `Accept-Encoding` request headers
    # https://developer.yahoo.com/blogs/ydn/pushing-beyond-gzipping-25601.html
	# ----------------------------------------------------------------------
    <IfModule mod_setenvif.c>
        <IfModule mod_headers.c>
            SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
            RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
        </IfModule>
    </IfModule>


    # Compress all output labeled with one of the following media types.
	# ----------------------------------------------------------------------
	AddOutputFilterByType DEFLATE "application/atom+xml" \
								  "application/javascript" \
								  "application/json" \
								  "application/ld+json" \
								  "application/manifest+json" \
								  "application/rdf+xml" \
								  "application/rss+xml" \
								  "application/schema+json" \
								  "application/vnd.geo+json" \
								  "application/vnd.ms-fontobject" \
								  "application/x-font-ttf" \
								  "application/x-javascript" \
								  "application/x-web-app-manifest+json" \
								  "application/xhtml+xml" \
								  "application/xml" \
								  "font/eot" \
								  "font/opentype" \
								  "image/bmp" \
								  "image/svg+xml" \
								  "image/vnd.microsoft.icon" \
								  "image/x-icon" \
								  "text/cache-manifest" \
								  "text/css" \
								  "text/html" \
								  "text/javascript" \
								  "text/plain" \
								  "text/vcard" \
								  "text/vnd.rim.location.xloc" \
								  "text/vtt" \
								  "text/x-component" \
								  "text/x-cross-domain-policy" \
								  "text/xml"
								  

    # Map the following filename extensions to the specified encoding type in order to make Apache serve the file types with the appropriate 'Content-Encoding' response header
	# ----------------------------------------------------------------------
    <IfModule mod_mime.c>
        AddEncoding gzip              svgz
    </IfModule>
</IfModule>


# Redirect from the `http://` to the `https://` version of the URL. (uncomment to use)
# ----------------------------------------------------------------------
# <IfModule mod_rewrite.c>
#    RewriteEngine On
#    RewriteCond %{HTTPS} !=on
#    RewriteRule ^(.*)$ https://%{HTTP_HOST}/$1 [R=301,L]
# </IfModule>


# Force client-side SSL redirection.
# If a user types 'example.com' in their browser, even if the server redirects them to the secure version of the website, that still leaves a window of opportunity (the initial HTTP connection) for an attacker to downgrade or redirect the request.
# Remove the 'includeSubDomains' optional directive if the website's subdomains are not using HTTPS.
# ----------------------------------------------------------------------
# <IfModule mod_headers.c>
#     Header set Strict-Transport-Security "max-age=16070400; includeSubDomains"
# </IfModule>


# Suppressing the 'www.' at the beginning of URLs
# The same content should never be available under two different URLs, especially not with and without `www.` at the beginning. This can cause SEO problems (duplicate content), and therefore, you should choose one of the alternatives and redirect the other one.
# ----------------------------------------------------------------------
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteCond %{HTTPS} !=on
    RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
    RewriteRule ^ %{ENV:PROTO}://%1%{REQUEST_URI} [R=301,L]
</IfModule>


# Block access to directories without a default document.
# ----------------------------------------------------------------------
<IfModule mod_autoindex.c>
    Options -Indexes
</IfModule>

# Reducing MIME type security risks    
# Prevent some browsers from MIME-sniffing the response.
# ----------------------------------------------------------------------
<IfModule mod_headers.c>
    Header set X-Content-Type-Options "nosniff"
</IfModule>


# Rewrite engine
# ----------------------------------------------------------------------
<IfModule mod_rewrite.c>
	Options +FollowSymLinks
	RewriteEngine On
	
	RewriteCond %{HTTPS} =on
    RewriteRule ^ - [env=proto:https]
    RewriteCond %{HTTPS} !=on
    RewriteRule ^ - [env=proto:http]

	RewriteCond %{THE_REQUEST} \s/+index\.php\?url=([^\s&]+) [NC]
	RewriteRule ^ /%1? [R=301,L,NE]
  
	RewriteCond %{REQUEST_FILENAME} !-d
	RewriteCond %{REQUEST_FILENAME} !-f

	RewriteRule ^(.*)$ index.php?url=$1 [QSA,L]
</IfModule>